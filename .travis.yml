dist: xenial # needed to use python 3.7
language: python
branches:
  only:
    - master
python:
  - 3.7
cache:
  directories:
  - node_modules
env:
  global:
  - PIPENV_VERBOSITY=-1
install:
  - pip install -r ./docsrc/requirements.txt
  - pip install -U pip
  - pip install pipenv
  - pipenv install # set up the environment
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/cFDK.git repos_for_Doc/cFDK
  - ls -la repos_for_Doc/cFDK
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/Dox.git repos_for_Doc/Dox
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/cFp_Monolithic.git repos_for_Doc/cFp_Monolithic
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/cFp_Vitis.git repos_for_Doc/cFp_Vitis
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/cFp_EchoThemisto.git repos_for_Doc/cFp_EchoThemisto
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/cFp_Uppercase.git repos_for_Doc/cFp_Uppercase
  - git clone --depth=1 https://DID:$GITHUB_TOKEN@github.ibm.com/cloudFPGA/cFp_Triangle.git repos_for_Doc/cFp_Triangle

#  - curl -sfL https://install.goreleaser.com/github.com/ValeLint/vale.sh | sh -s v2.1.0 # install vale
#  - export PATH="./bin:$PATH"
#  - git clone https://diamantopoulos:$GITHUB-COM_TOKEN@github.com/doxygen/doxygen.git doxygen_local
#  - cd doxygen_local
#  - git checkout 7464fdd7d4a3efd97dbc24c171556d7683648c8d
#  - mkdir build && cd build
#  - cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=~/lib .. &>/dev/null
#  - make -j 4 &>/dev/null
#  - make install
#  - export PATH=~/lib/bin:$PATH
#  - ls -la ~/lib/bin
#  - doxygen --version
#  - cd ../../
# Install dependencies
#addons:
#  apt:
#    packages:
#      - graphviz
#      - build-essential
#      - flex
#      - bison
script:
  - skip # Travis requires a `script` property, but we do not need it
stages:
  - deploy
jobs:
  include:
    - stage: deploy
      #- script: vale --minAlertLevel error source # run vale
      name: Deploy to GitHub Pages
      if: (NOT type IN (pull_request)) AND (branch = master) # only deploy if merging on master
      script: pipenv run make dhtml
      deploy:
        provider: pages # deploy on github pages
        url: github.com
        skip_cleanup: true
        github_token: $GITHUB_COM_TOKEN
        local_dir: _build/html
